<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xmlns:context="http://www.springframework.org/schema/context"
			 xmlns:mvc="http://www.springframework.org/schema/mvc"
			 xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
			 xsi:schemaLocation="
		http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans.xsd
    	http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context.xsd
    	http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc.xsd
	    http://www.springframework.org/schema/tx
		  http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		  http://www.springframework.org/schema/aop
		  http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- Step 3: Add support for component scanning -->
	<context:component-scan base-package="io.yodo.crmdemo" />

	<!-- Step 4: Add support for conversion, formatting and validation support -->
	<mvc:annotation-driven/>

	<!-- Static stuff, CSS files, unicorns, etc. -->
	<mvc:resources mapping="/resources/**" location="/resources/"/>

	<!-- Step 5: Define Spring MVC view resolver -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- data source -->
	<bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<!-- db connection settings -->
		<property name="driverClass" value="org.postgresql.Driver" />
		<property name="jdbcUrl" value="jdbc:postgresql://postgres:5432/crmdemo" />
		<property name="user" value="postgres" />
		<property name="password" value="postgres" />
		<!-- these are connection pool properties for C3P0 -->
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="20" />
		<property name="maxIdleTime" value="30000" />
	</bean>

	<!-- @EnableAspectJAutoProxy -->
	<aop:aspectj-autoproxy/>

	<!-- Hibernate session factory -->
	<bean id="sessionFactory"
		  class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<property name="packagesToScan" value="io.yodo.crmdemo.entity" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<!-- Whatever the fawk this is -->
	<bean id="myTransactionManager"
		  class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<!-- More weird shit. Who is supposed to keep all of this in mind? -->
	<tx:annotation-driven transaction-manager="myTransactionManager" />

	<!-- Message source. Properties files. Everything is automagic, except when not ... -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages"/>
	</bean>

</beans>
